# Copyright (c) 2017 Board of Trustees of Leland Stanford Jr. University,
# all rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# STANFORD UNIVERSITY BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR
# IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# Except as contained in this notice, the name of Stanford University shall not
# be used in advertising or otherwise to promote the sale, use or other dealings
# in this Software without prior written authorization from Stanford University.
#
swagger: '2.0'
info:
  description: API of Configuration Service for LAAWS
  version: 1.0.0
  title: LAAWS Configuration Service API
  termsOfService: http://www.lockss.org/terms/
  contact:
    name: 'LOCKSS Support'
    url: 'http://www.lockss.org/'
    email: 'support@lockss.org'
  license:
    name: 'Modified BSD License'
    url: 'http://www.lockss.org/support/open-source-license/'
host: 'laaws.lockss.org:443'
basePath: /
tags:
  - name: Default
    description: Default section
  - name: config
    description: Tasks on the configuration
  - name: aus
    description: Tasks on the configuration
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  basicAuth:
    type: basic
    description: HTTP Basic Authentication. Works over `HTTP` and `HTTPS`
security:
  - basicAuth: []
paths:
  '/config/file/{sectionName}':
    put:
      tags:
        - config
      summary: Store the named configuration file
      description: Store the configuration file for a given name
      operationId: putConfig
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: 'sectionName'
          in: path
          description: The name of the section for which the configuration file\
            \ is to be stored
          required: true
          type: string
        - name: 'configFile'
          in: body
          description: The configuration file to be stored
          required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
        '401':
          description: Unauthorized request
        '403':
          description: Forbidden request
        '500':
          description: Internal server error
        '503':
          description: Some or all of the system is not available
    get:
      tags:
        - config
      summary: Get the named configuration file
      description: Get the configuration file stored for a given name
      operationId: getConfig
      produces:
        - multipart/form-data
      parameters:
        - name: 'sectionName'
          in: path
          description: The name of the section for which the configuration file\
            \ is requested
          required: true
          type: string
      responses:
        '200':
          description: The named configuration file
        '400':
          description: Bad request
        '401':
          description: Unauthorized request
        '500':
          description: Internal server error
        '503':
          description: Some or all of the system is not available
  '/config/loadedurls':
    get:
      tags:
        - config
      summary: Get the URLs from which the configuration was loaded
      description: Get the URLs from which the configuration was actually\
        \ loaded, reflecting any failover to local copies
      operationId: getLoadedUrlList
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: The URLs from which the configuration was loaded
          schema:
            type: array
            items:
              type: string
        '401':
          description: Unauthorized request
        '500':
          description: Internal server error
        '503':
          description: Some or all of the system is not available
  '/config/lastupdatetime':
    get:
      tags:
        - config
      summary: Get the timestamp when the configuration was last updated
      description: Get the timestamp when the configuration was last updated
      operationId: getLastUpdateTime
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: The timestamp when the configuration was last updated
          schema:
            type: string
            format: date-time
        '401':
          description: Unauthorized request
        '500':
          description: Internal server error
        '503':
          description: Some or all of the system is not available
  '/config/reload':
    put:
      tags:
        - config
      summary: Request a configuration reload
      description: Request that the stored configuration is reloaded
      operationId: putConfigReload
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized request
        '403':
          description: Forbidden request
        '500':
          description: Internal server error
        '503':
          description: Some or all of the system is not available
  '/aus':
    get:
      tags:
        - aus
      summary: Get the configurations of all AUs
      description: Get the configuration of all AUs
      operationId: getAllAuConfig
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: The configuration of all AUs
          schema:
            type: array
            items:
              $ref: '#/definitions/configExchange'
        '401':
          description: Unauthorized request
        '500':
          description: Internal server error
        '503':
          description: Some or all of the system is not available
  '/aus/{auid}':
    put:
      tags:
        - aus
      summary: Store the configuration of an AU
      description: Store the configuration of an AU given the AU identifier
      operationId: putAuConfig
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: 'auid'
          in: path
          description: The identifier of the AU for which the configuration is\
            \ to be stored
          required: true
          type: string
        - name: 'configExchange'
          in: body
          description: The configuration items to be stored
          required: true
          schema:
            $ref: '#/definitions/configExchange'
      responses:
        '200':
          description: The configuration of the specified AU after it's stored
          schema:
            $ref: '#/definitions/configExchange'
        '400':
          description: Bad request
        '401':
          description: Unauthorized request
        '403':
          description: Forbidden request
        '500':
          description: Internal server error
        '503':
          description: Some or all of the system is not available
    get:
      tags:
        - aus
      summary: Get the configuration of an AU
      description: Get the configuration of an AU given the AU identifier
      operationId: getAuConfig
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: 'auid'
          in: path
          description: The identifier of the AU for which the configuration is\
            \ requested
          required: true
          type: string
      responses:
        '200':
          description: The configuration of the specified AU
          schema:
            $ref: '#/definitions/configExchange'
        '400':
          description: Bad request
        '401':
          description: Unauthorized request
        '500':
          description: Internal server error
        '503':
          description: Some or all of the system is not available
    delete:
      tags:
        - aus
      summary: Delete the the configuration of an AU
      description: Delete the configuration of an AU given the AU identifier
      operationId: deleteAuConfig
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: 'auid'
          in: path
          description: The identifier of the AU for which the configuration is\
            \ to be deleted
          required: true
          type: string
      responses:
        '200':
          description: The deleted configuration of the specified AU
          schema:
            $ref: '#/definitions/configExchange'
        '400':
          description: Bad request
        '401':
          description: Unauthorized request
        '403':
          description: Forbidden request
        '500':
          description: Internal server error
        '503':
          description: Some or all of the system is not available
definitions:
  configModSpec:
    type: object
    required:
      - header
      - updates
      - deletes
    properties:
      header:
        type: string
        description: A file header string
      updates:
        type: object
        description: The map of configuration items that are modified
        additionalProperties:
          type: string
          description: The value of the configuration for the key
      deletes:
        type: array
        items:
          type: string
        description: The set of configuration keys to be deleted
    description: The encapsulation of a set of configuration modifications
  configExchange:
    type: object
    required:
      - props
    properties:
      props:
        type: object
        description: The map of configuration items
        additionalProperties:
          type: string
          description: The value of the configuration for the key
    description: The encapsulation of a set of configuration properties
