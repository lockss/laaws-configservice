openapi: 3.0.3
info:
  title: LOCKSS Configuration Service REST API
  description: REST API of the LOCKSS Configuration Service
  contact:
    name: LOCKSS Support
    url: https://www.lockss.org/
    email: lockss-support@lockss.org
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  version: 2.0.0
servers:
- url: https://laaws.lockss.org:443/
security:
- basicAuth: []
tags:
- name: Default
  description: Default section
- name: config
  description: Tasks on the configuration
- name: aus
  description: Tasks on the archival units (AUs)
paths:
  /config/file/{sectionName}:
    get:
      tags:
      - config
      summary: Get the named configuration file
      description: Get the configuration file stored for a given name
      operationId: getSectionConfig
      parameters:
      - name: sectionName
        in: path
        description: The name of the section for which the configuration file is
          requested
        required: true
        schema:
          type: string
      - name: If-Match
        in: header
        description: The If-Match header
        schema:
          type: string
      - name: If-Modified-Since
        in: header
        description: The If-Match header
        schema:
          type: string
      - name: If-None-Match
        in: header
        description: The If-Match header
        schema:
          type: string
      - name: If-Unmodified-Since
        in: header
        description: The If-Match header
        schema:
          type: string
      responses:
        "200":
          description: The named configuration file
          content:
            multipart/form-data:
              schema:
                type: string
                format: binary
        "304":
          description: Not Modified
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
        "406":
          description: Not Acceptable
          content: {}
        "412":
          description: Precondition failed
          content: {}
        "500":
          description: Internal Server Error
          content: {}
    put:
      tags:
      - config
      summary: Store the named configuration file
      description: Store the configuration file for a given name
      operationId: putConfig
      parameters:
      - name: sectionName
        in: path
        description: The name of the section for which the configuration file is
          to be stored
        required: true
        schema:
          type: string
      - name: If-Match
        in: header
        description: The If-Match header
        schema:
          type: string
      - name: If-Modified-Since
        in: header
        description: The If-Match header
        schema:
          type: string
      - name: If-None-Match
        in: header
        description: The If-Match header
        schema:
          type: string
      - name: If-Unmodified-Since
        in: header
        description: The If-Match header
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - configFile
              type: object
              properties:
                configFile:
                  type: string
                  description: The configuration file to be stored
                  format: binary
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "412":
          description: Precondition failed
          content: {}
        "415":
          description: Unsupported Media Type
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /config/url:
    get:
      tags:
      - config
      summary: Get the configuration file for a URL
      description: Get the configuration file stored for a given URL
      operationId: getUrlConfig
      parameters:
      - name: url
        in: query
        description: The URL for which the configuration is requested
        required: true
        schema:
          type: string
      - name: If-Match
        in: header
        description: The If-Match header
        schema:
          type: string
      - name: If-Modified-Since
        in: header
        description: The If-Match header
        schema:
          type: string
      - name: If-None-Match
        in: header
        description: The If-Match header
        schema:
          type: string
      - name: If-Unmodified-Since
        in: header
        description: The If-Match header
        schema:
          type: string
      responses:
        "200":
          description: The configuration file for the URL
          content:
            multipart/form-data:
              schema:
                type: string
                format: binary
        "304":
          description: Not Modified
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
        "406":
          description: Not Acceptable
          content: {}
        "412":
          description: Precondition failed
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /config/loadedurls:
    get:
      tags:
      - config
      summary: Get the URLs from which the configuration was loaded
      description: "Get the URLs from which the configuration was actually loaded,
        reflecting any failover to local copies"
      operationId: getLoadedUrlList
      responses:
        "200":
          description: The URLs from which the configuration was loaded
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "401":
          description: Unauthorized
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /config/lastupdatetime:
    get:
      tags:
      - config
      summary: Get the timestamp when the configuration was last updated
      description: Get the timestamp when the configuration was last updated
      operationId: getLastUpdateTime
      responses:
        "200":
          description: The timestamp when the configuration was last updated
          content:
            application/json:
              schema:
                type: string
                format: date-time
        "401":
          description: Unauthorized
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /config/reload:
    put:
      tags:
      - config
      summary: Request a configuration reload
      description: Request that the stored configuration is reloaded
      operationId: putConfigReload
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /config/platform:
    get:
      tags:
      - config
      summary: Get the platform configuration
      description: Get the platform configuration
      operationId: getPlatformConfig
      responses:
        "200":
          description: The platform configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/platformConfigurationWsResult'
        "401":
          description: Unauthorized
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /auids:
    post:
      tags:
      - aus
      summary: Calculate an AUID for a hypothetical AU
      description: "Calculate an AUID for a hypothetical AU, given either a plugin
        ID and an auConfig map (for traditional AUs), or a handle and an optional
        plugin ID for NamedAUs"
      operationId: calculateAuid
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                pluginId:
                  type: string
                  description: the plugin id
                handle:
                  type: string
                  description: the handle of a NamedArchivalUnit
                auConfig:
                  description: The configuration information for this au (as a json
                    map).
      responses:
        "200":
          description: Map containing the resulting AUID
          content:
            application/json:
              schema:
                type: string
            text/plain:
              schema:
                type: string
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /aus:
    get:
      tags:
      - aus
      summary: Get the configurations of all AUs
      description: Get the configuration of all AUs
      operationId: getAllAuConfig
      responses:
        "200":
          description: The configuration of all AUs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/auConfiguration'
        "401":
          description: Unauthorized
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /aus/{auid}:
    get:
      tags:
      - aus
      summary: Get the configuration of an AU
      description: Get the configuration of an AU given the AU identifier
      operationId: getAuConfig
      parameters:
      - name: auid
        in: path
        description: The identifier of the AU for which the configuration is requested
        required: true
        schema:
          type: string
      responses:
        "200":
          description: The configuration of the specified AU
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auConfiguration'
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
    put:
      tags:
      - aus
      summary: Store the configuration of an AU
      description: Store the configuration of an AU given the AU identifier
      operationId: putAuConfig
      parameters:
      - name: auid
        in: path
        description: The identifier of the AU for this configuration.
        required: true
        schema:
          type: string
      requestBody:
        description: The Archival Unit configuration to be stored
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/auConfiguration'
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "415":
          description: Unsupported Media Type
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: auConfiguration
    delete:
      tags:
      - aus
      summary: Delete the configuration of an AU
      description: Delete the configuration of an AU given the AU identifier
      operationId: deleteAuConfig
      parameters:
      - name: auid
        in: path
        description: The identifier of the AU for which the configuration is to
          be deleted
        required: true
        schema:
          type: string
      responses:
        "200":
          description: The deleted configuration of the specified AU
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auConfiguration'
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /aus/add:
    post:
      tags:
      - aus
      summary: Add AUs
      description: Add a group of AUs given their identifiers
      operationId: postAus
      requestBody:
        description: The identifiers of the Archival Units to be added
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: Information about the added AUs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/contentConfigurationResult'
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "415":
          description: Unsupported Media Type
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: auIds
  /aus/deactivate:
    put:
      tags:
      - aus
      summary: Deactivate AUs
      description: Deactivate a group of AUs given their identifiers
      operationId: putAusDeactivate
      requestBody:
        description: The identifiers of the Archival Units to be deactivated
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: Information about the deactivated AUs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/contentConfigurationResult'
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "415":
          description: Unsupported Media Type
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: auIds
  /aus/reactivate:
    put:
      tags:
      - aus
      summary: Reactivate AUs
      description: Reactivate a group of AUs given their identifiers
      operationId: putAusReactivate
      requestBody:
        description: The identifiers of the Archival Units to be reactivated
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: Information about the reactivated AUs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/contentConfigurationResult'
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "415":
          description: Unsupported Media Type
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: auIds
  /aus/delete:
    delete:
      tags:
      - aus
      summary: Delete AUs
      description: Delete a group of AUs given their identifiers
      operationId: deleteAusDelete
      requestBody:
        description: The identifiers of the Archival Units to be deleted
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: Information about the deleted AUs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/contentConfigurationResult'
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "415":
          description: Unsupported Media Type
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: auIds
  /aus/{auid}/mddisable:
    put:
      tags:
      - aus
      summary: Disable AU metadata extraction
      description: Disable the metadata extraction for an AU given its identifier
      operationId: putAusMdDisable
      parameters:
      - name: auid
        in: path
        description: The identifier of the Archival Units for which metadata extraction
          is to be disabled
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Information about the AU for which metadata extraction has
            been disabled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/requestAuControlResult'
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "409":
          description: Conflict
          content: {}
        "415":
          description: Unsupported Media Type
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /aus/{auid}/mdenable:
    put:
      tags:
      - aus
      summary: Enable AU metadata extraction
      description: Enable the metadata extraction for an AU given its identifier
      operationId: putAusMdEnable
      parameters:
      - name: auid
        in: path
        description: The identifier of the Archival Units for which metadata extraction
          is to be enabled
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Information about the AU for which metadata extraction has
            been enabled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/requestAuControlResult'
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "409":
          description: Conflict
          content: {}
        "415":
          description: Unsupported Media Type
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /austates/{auid}:
    get:
      tags:
      - aus
      summary: Get the state of an AU
      description: Get the state of an AU given the AU identifier
      operationId: getAuState
      parameters:
      - name: auid
        in: path
        description: The identifier of the AU for which the state is requested
        required: true
        schema:
          type: string
      responses:
        "200":
          description: The state of the specified AU
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
    patch:
      tags:
      - aus
      summary: Update the state of an AU
      description: Update the state of an AU given the AU identifier
      operationId: patchAuState
      parameters:
      - name: auid
        in: path
        description: The identifier of the AU for which the state is to be updated
        required: true
        schema:
          type: string
      - name: X-Lockss-Request-Cookie
        in: header
        description: The LOCKSS-specific request cookie header
        schema:
          type: string
      requestBody:
        description: The parts of the Archival Unit state to be updated
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "415":
          description: Unsupported Media Type
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: auState
  /auagreements/{auid}:
    get:
      tags:
      - aus
      summary: Get the poll agreements of an AU
      description: Get the poll agreements of an AU given the AU identifier
      operationId: getAuAgreements
      parameters:
      - name: auid
        in: path
        description: The identifier of the AU for which the poll agreements are
          requested
        required: true
        schema:
          type: string
      responses:
        "200":
          description: The poll agreements of the specified AU
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
    patch:
      tags:
      - aus
      summary: Update the poll agreements of an AU
      description: Update the poll agreements of an AU given the AU identifier
      operationId: patchAuAgreements
      parameters:
      - name: auid
        in: path
        description: The identifier of the AU for which the poll agreements are
          to be updated
        required: true
        schema:
          type: string
      - name: X-Lockss-Request-Cookie
        in: header
        description: The LOCKSS-specific request cookie header
        schema:
          type: string
      requestBody:
        description: The parts of the Archival Unit poll agreements to be updated
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "415":
          description: Unsupported Media Type
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: auAgreements
  /aususpecturls/{auid}:
    get:
      tags:
      - aus
      summary: Get the suspect URL versions of an AU
      description: Get the suspect URL versions of an AU given the AU identifier
      operationId: getAuSuspectUrlVersions
      parameters:
      - name: auid
        in: path
        description: The identifier of the AU for which the suspect URL versions
          are requested
        required: true
        schema:
          type: string
      responses:
        "200":
          description: The suspect URL versions of the specified AU
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
    put:
      tags:
      - aus
      summary: Update the suspect URL versions of an AU
      description: Update the suspect URL versions of an AU given the AU identifier
      operationId: putAuSuspectUrlVersions
      parameters:
      - name: auid
        in: path
        description: The identifier of the AU for which the suspect URL versions
          are to be updated
        required: true
        schema:
          type: string
      - name: X-Lockss-Request-Cookie
        in: header
        description: The LOCKSS-specific request cookie header
        schema:
          type: string
      requestBody:
        description: The parts of the Archival Unit suspect URL versions to be
          updated
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "415":
          description: Unsupported Media Type
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: auSuspectUrlVersions
  /noaupeers/{auid}:
    get:
      tags:
      - aus
      summary: Get the NoAuPeerSet object of an AU
      description: Get the NoAuPeerSet object of an AU given the AU identifier
      operationId: getNoAuPeers
      parameters:
      - name: auid
        in: path
        description: The identifier of the AU for which the NoAuPeerSet object
          is requested
        required: true
        schema:
          type: string
      responses:
        "200":
          description: The NoAuPeerSet object of the specified AU
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
    put:
      tags:
      - aus
      summary: Update the NoAuPeerSet object of an AU
      description: Update the NoAuPeerSet object of an AU given the AU identifier
      operationId: putNoAuPeers
      parameters:
      - name: auid
        in: path
        description: The identifier of the AU for which the NoAuPeerSet object
          is to be updated
        required: true
        schema:
          type: string
      - name: X-Lockss-Request-Cookie
        in: header
        description: The LOCKSS-specific request cookie header
        schema:
          type: string
      requestBody:
        description: The parts of the Archival Unit NoAuPeerSet object to be updated
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "415":
          description: Unsupported Media Type
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: noAuPeerSet
  /ws/tdbaus:
    get:
      tags:
      - tdb
      summary: Query the TDB for AUs
      description: Query the TDB for AUs that meet a set of specified conditions
      operationId: getTdbAus
      parameters:
      - name: tdbAuQuery
        in: query
        description: The query that specifies the TDB AUs to be returned
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Information about the requested TDB AUs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tdbAuWsResult'
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /ws/tdbtitles:
    get:
      tags:
      - tdb
      summary: Query the TDB for Titles
      description: Query the TDB for Titles that meet a set of specified conditions
      operationId: getTdbTitles
      parameters:
      - name: tdbTitleQuery
        in: query
        description: The query that specifies the TDB Titles to be returned
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Information about the requested TDB Titles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tdbTitleWsResult'
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /ws/tdbpublishers:
    get:
      tags:
      - tdb
      summary: Query the TDB for Publishers
      description: Query the TDB for Publishers that meet a set of specified conditions
      operationId: getTdbPublishers
      parameters:
      - name: tdbPublisherQuery
        in: query
        description: The query that specifies the TDB Publishers to be returned
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Information about the requested TDB Publishers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tdbPublisherWsResult'
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /ws/plugins:
    get:
      tags:
      - plugins
      summary: Query for plugin properties
      description: Query for plugins that meet a set of specified conditions
      operationId: getPlugins
      parameters:
      - name: pluginQuery
        in: query
        description: The query that specifies the plugins to be returned
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Information about the requested plugins
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/pluginWsResult'
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /ws/auqueries:
    get:
      tags:
      - aus
      summary: Query for archival unit properties
      description: Query for archival units that meet a set of specified conditions
      operationId: getAuqueries
      parameters:
      - name: auQuery
        in: query
        description: The query that specifies the archival units to be returned
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Information about the requested archival units
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/auWsResult'
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /austatuses/{auid}:
    get:
      tags:
      - aus
      summary: Get the status of an AU
      description: Get the status of an AU given the AU identifier
      operationId: getAuStatus
      parameters:
      - name: auid
        in: path
        description: The identifier of the AU for which the status is requested
        required: true
        schema:
          type: string
      responses:
        "200":
          description: The status of the specified AU
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auStatus'
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /ausubstances/{auid}:
    put:
      tags:
      - aus
      summary: Update the substance of an AU
      description: Update the substance of an AU given the AU identifier
      operationId: putAuSubstanceCheck
      parameters:
      - name: auid
        in: path
        description: The identifier of the AU for which the substance check is
          requested
        required: true
        schema:
          type: string
      responses:
        "200":
          description: The substance check of the specified AU
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkSubstanceResult'
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /status:
    get:
      tags:
      - status
      summary: Get the status of the service
      description: Get the status of the service
      operationId: getStatus
      responses:
        "200":
          description: The status of the service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatus'
        "401":
          description: Unauthorized
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /usernames:
    get:
      tags:
      - users
      summary: Get the usernames configured in the system
      description: Get the usernames configured in the system
      operationId: getUserAccountNames
      responses:
        "200":
          description: A list of usernames configured in the system
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "401":
          description: Unauthorized
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /users:
    post:
      tags:
      - users
      summary: Adds user accounts to the system
      description: Adds user accounts to the system
      operationId: addUserAccounts
      requestBody:
        description: An array of user accounts to be stored
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: Successfully added user accounts
          content:
            application/json:
              schema:
                type: string
        "401":
          description: Unauthorized
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: userAccounts
  /users/{username}:
    get:
      tags:
      - users
      summary: Get user account details
      description: Get user account details
      operationId: getUserAccount
      parameters:
      - name: username
        in: path
        description: Username
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A JSON serialization containing details of the user account
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
    delete:
      tags:
      - users
      summary: Remove a user account from the system
      description: Remove a user account from the system
      operationId: removeUserAccount
      parameters:
      - name: username
        in: path
        description: Username
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Removed user account
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
    patch:
      tags:
      - users
      summary: Update properties of an existing user account
      description: Update properties of an existing user account
      operationId: updateUserAccount
      parameters:
      - name: username
        in: path
        description: Username
        required: true
        schema:
          type: string
      - name: X-Lockss-Request-Cookie
        in: header
        description: The LOCKSS-specific request cookie header
        schema:
          type: string
      requestBody:
        description: The user account details to be updated
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: Updated user account
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "404":
          description: Not Found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: userAccount
components:
  schemas:
    platformConfigurationWsResult:
      required:
      - hostName
      type: object
      properties:
        hostName:
          type: string
          description: name of the host server
      description: The configuration of the platform
    auConfiguration:
      required:
      - auConfig
      - auId
      type: object
      properties:
        auId:
          type: string
          description: The identifier of the Archival Unit
        auConfig:
          type: object
          additionalProperties:
            type: string
            description: The value of the configuration for the key
          description: The map of Archival Unit configuration items
      description: The encapsulation of an Archival Unit configuration
    contentConfigurationResult:
      required:
      - auId
      - isSuccess
      - message
      - name
      type: object
      properties:
        auId:
          type: string
          description: The identifier of the Archival Unit
        name:
          type: string
          description: The name of the Archival Unit
        isSuccess:
          type: boolean
          description: An indication of whether the AU was successfully added or not
        message:
          type: string
          description: A descriptive message regarding the result of the operation
      description: The encapsulation of the result of adding an Archival Unit
    tdbAuWsResult:
      type: object
      properties:
        auId:
          type: string
          description: The identifier of the Archival Unit
        name:
          type: string
          description: The name of the Archival Unit
        pluginName:
          type: string
          description: The name of the Archival Unit plugin
        tdbTitle:
          $ref: '#/components/schemas/tdbTitleWsResult'
        tdbPublisher:
          $ref: '#/components/schemas/tdbPublisherWsResult'
        down:
          type: boolean
          description: An indication of whether the AU is marked as down or not
        active:
          type: boolean
          description: An indication of whether the AU is active or not
        params:
          type: object
          additionalProperties:
            type: string
            description: The value of the parameter for the key
          description: The map of Archival Unit parameters
        attrs:
          type: object
          additionalProperties:
            type: string
            description: The value of the attribute for the key
          description: The map of Archival Unit attributes
        props:
          type: object
          additionalProperties:
            type: string
            description: The value of the property for the key
          description: The map of Archival Unit properties
      description: The properties of a TDB Archival Unit
    tdbTitleWsResult:
      type: object
      properties:
        name:
          type: string
          description: The name of the TDB Title
        tdbPublisher:
          $ref: '#/components/schemas/tdbPublisherWsResult'
        id:
          type: string
          description: The identifier of the TDB Title
        proprietaryid:
          type: string
          description: The proprietary identifier of the TDB Title
        proprietaryids:
          type: array
          description: The proprietary identifiers of the TDB Title
          items:
            type: string
        publicationtype:
          type: string
          description: The publication type of the TDB Title
        issn:
          type: string
          description: The ISSN of the TDB Title
        issnl:
          type: string
          description: The ISSNL of the TDB Title
        eissn:
          type: string
          description: The eISSN of the TDB Title
        printissn:
          type: string
          description: The print ISSN of the TDB Title
        issns:
          type: array
          description: The ISSNs of the TDB Title
          items:
            type: string
      description: The properties of a TDB Title
    tdbPublisherWsResult:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: The name of the TDB Publisher
      description: The properties of a TDB Publisher
    pluginWsResult:
      required:
      - auCount
      - definition
      - name
      - pluginId
      - publishingPlatform
      - registry
      - type
      - url
      - version
      type: object
      properties:
        pluginId:
          type: string
          description: The identifier of the plugin
        name:
          type: string
          description: The name of the plugin
        version:
          type: string
          description: The version of the plugin
        type:
          type: string
          description: The type of the plugin
        definition:
          type: object
          additionalProperties:
            type: string
            description: The value of the property for the key
          description: The map of plugin definition properties
        registry:
          type: string
          description: The registry of the plugin
        url:
          type: string
          description: The URL of the plugin
        auCount:
          type: integer
          description: The count of Archival Units linked to the plugin
        publishingPlatform:
          type: string
          description: The publishing platform of the plugin
      description: The properties of a plugin
    auWsResult:
      required:
      - auId
      type: object
      properties:
        auId:
          type: string
          description: The identifier of the archival unit
      description: The properties of an archival unit
    requestAuControlResult:
      required:
      - errorMessage
      - id
      - success
      type: object
      properties:
        id:
          type: string
          description: The identifier of the archival unit
        success:
          type: boolean
          description: An indication of whether the result is successful
        errorMessage:
          type: string
          description: The error message as a result of the operation
      description: The result of an archival unit generic control request
    auStatus:
      required:
      - volume
      type: object
      properties:
        volume:
          type: string
          description: The volume of the archival unit
      description: The status of an archival unit
    checkSubstanceResult:
      required:
      - errorMessage
      - id
      - newState
      - oldState
      type: object
      properties:
        id:
          type: string
          description: The identifier of the archival unit
        oldState:
          type: string
          description: An indication of whether the result is successful
          enum:
          - Unknown
          - "Yes"
          - "No"
        newState:
          type: string
          description: An indication of whether the result is successful
          enum:
          - Unknown
          - "Yes"
          - "No"
        errorMessage:
          type: string
          description: The error message as a result of the operation
      description: The status of an archival unit
    apiStatus:
      required:
      - apiVersion
      - ready
      type: object
      properties:
        apiVersion:
          type: string
          description: The version of the API
        componentName:
          type: string
          description: The name of the component
        componentVersion:
          type: string
          description: The version of the component software
        lockssVersion:
          type: string
          description: The version of the LOCKSS system
        ready:
          type: boolean
          description: The indication of whether the service is available
        serviceName:
          type: string
          description: The name of the service
        readyTime:
          type: integer
          description: The time the service last became ready.
          format: int64
        reason:
          type: string
          description: The reason the service isn't ready.
        startupStatus:
          type: string
          description: Enum indicating progress of plugin/AU processing at startup.
          enum:
          - NONE
          - PLUGINS_CRAWLING
          - PLUGINS_COLLECTED
          - PLUGINS_LOADING
          - PLUGINS_LOADED
          - AUS_STARTING
          - AUS_STARTED
      description: The status information of the service
  securitySchemes:
    basicAuth:
      type: http
      description: HTTP Basic Authentication. Works over `HTTP` and `HTTPS`
      scheme: basic
x-original-swagger-version: "2.0"
